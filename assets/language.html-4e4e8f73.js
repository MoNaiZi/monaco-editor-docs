import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{o as n,c as a,b as l}from"./app-8d5f4333.js";const e={},o=l(`<h1 id="language" tabindex="-1"><a class="header-anchor" href="#language" aria-hidden="true">#</a> Language</h1><h2 id="getencodedlanguageid" tabindex="-1"><a class="header-anchor" href="#getencodedlanguageid" aria-hidden="true">#</a> getEncodedLanguageId</h2><ul><li>语法: <code>getEncodedLanguageId(languageId: string): number</code></li><li>参数: <code>languageId</code></li><li>返回值: <code>number</code> 指定语言的编码ID。 描述: 用于获取指定语言的编码ID。这个编码ID可以用于在编辑器中设置语言模式。 示例代码：</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// 引入monaco-editor</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">*</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;monaco-editor&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 获取JavaScript语言的编码ID</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">languageId</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getEncodedLanguageId</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;javascript&#39;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 在编辑器中设置语言模式</span></span>
<span class="line"><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">editor</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">setModelLanguage</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">editor</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getModel</span><span style="color:#D4D4D4;">(), </span><span style="color:#9CDCFE;">languageId</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="getlanguages" tabindex="-1"><a class="header-anchor" href="#getlanguages" aria-hidden="true">#</a> getLanguages</h2><ul><li>语法: <code>getLanguages(): string[]</code></li><li>返回值: <code>string[]</code> 所有已注册的语言ID的数组。 描述: 用于获取所有已注册的语言ID的数组。 示例代码：</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// 引入monaco-editor</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">*</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;monaco-editor&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 获取所有已注册的语言ID的数组</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">languages</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getLanguages</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 打印所有语言ID</span></span>
<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="onlanguage" tabindex="-1"><a class="header-anchor" href="#onlanguage" aria-hidden="true">#</a> onLanguage</h2><ul><li>语法: <code>onLanguage(languageId: string, callback: () =&gt; void): IDisposable</code></li><li>参数: <code>languageId</code> 要监听的语言ID。<code>callback</code> 当指定语言被注册时要执行的回调函数。</li><li>返回值: <code>IDisposable</code>一个对象，用于取消监听。 描述: 用于监听指定语言的注册事件。 示例代码：</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// 引入monaco-editor</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">*</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;monaco-editor&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 监听JavaScript语言的注册事件</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">disposable</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">onLanguage</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;javascript&#39;</span><span style="color:#D4D4D4;">, () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;JavaScript language is registered!&#39;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 取消监听</span></span>
<span class="line"><span style="color:#9CDCFE;">disposable</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">dispose</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="onlanguageencountered" tabindex="-1"><a class="header-anchor" href="#onlanguageencountered" aria-hidden="true">#</a> onLanguageEncountered</h2><ul><li>语法: <code>nLanguageEncountered(callback: (languageId: string) =&gt; void): IDisposabl</code></li><li>参数: <code>allback</code> 当遇到未注册的语言时要执行的回调函数，该函数接收一个参数<code>languageId</code>，表示遇到的未注册语言的ID。</li><li>返回值: <code>IDisposable</code>一个对象，用于取消监听。 描述: 用于监听遇到未注册的语言事件。 示例代码：</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// 引入monaco-editor</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">*</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;monaco-editor&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 监听遇到未注册的语言事件</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">disposable</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">onLanguageEncountered</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">languageId</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">\`Encountered an unregistered language: </span><span style="color:#569CD6;">\${</span><span style="color:#9CDCFE;">languageId</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">\`</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 取消监听</span></span>
<span class="line"><span style="color:#9CDCFE;">disposable</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">dispose</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="register" tabindex="-1"><a class="header-anchor" href="#register" aria-hidden="true">#</a> register</h2><ul><li>语法: <code>egister(language: ILanguageExtensionPoint): voi</code></li><li>参数: <code>anguage</code>要注册的语言的扩展点对象。 描述: 用于注册一种新的语言。 示例代码：</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// 引入monaco-editor</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">*</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;monaco-editor&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 定义要注册的语言的扩展点对象</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">language</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">id:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;myLanguage&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">extensions:</span><span style="color:#D4D4D4;"> [</span><span style="color:#CE9178;">&#39;.mylang&#39;</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">aliases:</span><span style="color:#D4D4D4;"> [</span><span style="color:#CE9178;">&#39;My Language&#39;</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">mimetypes:</span><span style="color:#D4D4D4;"> [</span><span style="color:#CE9178;">&#39;text/mylang&#39;</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">loader</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">resolve</span><span style="color:#D4D4D4;">({}),</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 注册新语言</span></span>
<span class="line"><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">register</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">language</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="registercodeactionprovider" tabindex="-1"><a class="header-anchor" href="#registercodeactionprovider" aria-hidden="true">#</a> registerCodeActionProvider</h2><ul><li>语法: <code>egisterCodeActionProvider(languageId: string, provider: CodeActionProvider): IDisposable</code></li><li>参数:<code>languageId</code>要注册代码操作提供程序的语言ID。<code>provider</code>代码操作提供程序对象。</li><li>返回值: <code>IDisposable</code>一个对象，用于取消注册。 描述: 用于注册代码操作提供程序。 示例代码：</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">disposable</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">registerCodeActionProvider</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;javascript&#39;</span><span style="color:#D4D4D4;">, {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">provideCodeActions</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">range</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">context</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">token</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#6A9955;">// 在此处添加自定义代码操作</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> [</span></span>
<span class="line"><span style="color:#D4D4D4;">      {</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">title:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;Custom Code Action&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">command:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;customCodeAction&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">arguments:</span><span style="color:#D4D4D4;"> []</span></span>
<span class="line"><span style="color:#D4D4D4;">      }</span></span>
<span class="line"><span style="color:#D4D4D4;">    ];</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 取消注册</span></span>
<span class="line"><span style="color:#9CDCFE;">disposable</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">dispose</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>该提供程序将在JavaScript文件中提供自定义代码操作。我们传递一个对象作为第二个参数，该对象包含一个 provideCodeActions 方法，该方法将在用户右键单击代码时调用。该方法接收以下参数：</p><ul><li>model ：编辑器的模型。</li><li>range ：用户右键单击的文本范围。</li><li>context ：包含有关代码操作上下文的信息的对象。</li><li>token ：取消标记，用于在操作提供程序执行时取消操作。</li></ul><p>在 provideCodeActions 方法中，我们可以添加自定义代码操作并将其作为数组返回。每个操作都是一个对象，该对象包含以下属性：</p><ul><li>title ：操作的标题。</li><li>command ：要执行的命令的ID。</li><li>arguments ：传递给命令的参数。在此示例中，我们将空数组传递给命令。</li></ul><p>请注意，要执行自定义命令，您需要使用 monaco.commands.registerCommand API注册命令。</p><h2 id="registercodelensprovider" tabindex="-1"><a class="header-anchor" href="#registercodelensprovider" aria-hidden="true">#</a> registerCodeLensProvider</h2><ul><li>语法: <code>registerCodeLensProvider(languageId: string, provider: CodeLensProvider): IDisposable</code></li><li>参数: <code>languageId</code> 要注册代码镜头提供程序的语言ID。<code>provider</code> 代码镜头提供程序对象。</li><li>返回值: <code>IDisposable</code> 一个对象，用于取消注册。 描述: 用于注册代码镜头提供程序。</li></ul><p>示例代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// 引入monaco-editor</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">*</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;monaco-editor&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 定义代码镜头提供程序对象</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">provider</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">provideCodeLenses</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">token</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> [];</span></span>
<span class="line"><span style="color:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">resolveCodeLens</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">codeLens</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">token</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">codeLens</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 注册代码镜头提供程序</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">disposable</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">registerCodeLensProvider</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;myLanguage&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">provider</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 取消注册</span></span>
<span class="line"><span style="color:#9CDCFE;">disposable</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">dispose</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="registercolorprovider" tabindex="-1"><a class="header-anchor" href="#registercolorprovider" aria-hidden="true">#</a> registerColorProvider</h2><ul><li>语法: <code>registerColorProvider(languageId: string, provider: DocumentColorProvider): IDisposable</code></li><li>参数: <code>languageId</code> 要注册颜色提供程序的语言ID。 <code>provider</code> 颜色提供程序对象。</li><li>返回值: <code>IDisposable</code> 一个对象，用于取消注册。 描述: 用于注册颜色提供程序。</li></ul><p>示例代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// 引入monaco-editor</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">*</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;monaco-editor&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 定义颜色提供程序对象</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">provider</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">provideDocumentColors</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">token</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> [];</span></span>
<span class="line"><span style="color:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">provideColorPresentations</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">colorInfo</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">token</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> [];</span></span>
<span class="line"><span style="color:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 注册颜色提供程序</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">disposable</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">registerColorProvider</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;myLanguage&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">provider</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 取消注册</span></span>
<span class="line"><span style="color:#9CDCFE;">disposable</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">dispose</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="registercompletionitemprovider" tabindex="-1"><a class="header-anchor" href="#registercompletionitemprovider" aria-hidden="true">#</a> registerCompletionItemProvider</h2><ul><li>语法: <code>registerCompletionItemProvider(languageId: string, provider: CompletionItemProvider): IDisposable</code></li><li>参数: <code>languageId</code> 要注册自动完成提供程序的语言ID。 <code>provider</code> 自动完成提供程序对象。</li><li>返回值: <code>IDisposable</code> 一个对象，用于取消注册。 描述: 用于注册自动完成提供程序。</li></ul><p>示例代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// 引入monaco-editor</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">*</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;monaco-editor&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 定义自动完成提供程序对象</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">provider</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#DCDCAA;">provideCompletionItems</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">position</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">context</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">token</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;">suggestions:</span><span style="color:#D4D4D4;"> [],</span></span>
<span class="line"><span style="color:#9CDCFE;">incomplete:</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">false</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span>
<span class="line"><span style="color:#D4D4D4;">},</span></span>
<span class="line"><span style="color:#DCDCAA;">resolveCompletionItem</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">position</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">item</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">token</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">item</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">},</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 注册自动完成提供程序</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">disposable</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">registerCompletionItemProvider</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;myLanguage&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">provider</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 取消注册</span></span>
<span class="line"><span style="color:#9CDCFE;">disposable</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">dispose</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="registerdeclarationprovider" tabindex="-1"><a class="header-anchor" href="#registerdeclarationprovider" aria-hidden="true">#</a> registerDeclarationProvider</h2><ul><li>语法: <code>registerDeclarationProvider(languageId: string, provider: DeclarationProvider): IDisposable</code></li><li>参数: <code>languageId</code> 要注册声明提供程序的语言ID。 <code>provider</code> 声明提供程序对象。</li><li>返回值: <code>IDisposable</code> 一个对象，用于取消注册。 描述: 用于注册声明提供程序。</li></ul><p>示例代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// 引入monaco-editor</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">*</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;monaco-editor&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 定义声明提供程序对象</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">provider</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#DCDCAA;">provideDeclaration</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">position</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">token</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> [];</span></span>
<span class="line"><span style="color:#D4D4D4;">},</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 注册声明提供程序</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">disposable</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">registerDeclarationProvider</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;myLanguage&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">provider</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 取消注册</span></span>
<span class="line"><span style="color:#9CDCFE;">disposable</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">dispose</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="registerdefinitionprovider" tabindex="-1"><a class="header-anchor" href="#registerdefinitionprovider" aria-hidden="true">#</a> registerDefinitionProvider</h2><ul><li>语法: <code>registerDefinitionProvider(languageId: string, provider: DefinitionProvider): IDisposable</code></li><li>参数: <code>languageId</code> 要注册定义提供程序的语言ID。 <code>provider</code> 定义提供程序对象。</li><li>返回值: <code>IDisposable</code> 一个对象，用于取消注册。 描述: 用于注册定义提供程序。</li></ul><p>示例代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// 引入monaco-editor</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">*</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;monaco -editor&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 定义定义提供程序对象</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">provider</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#DCDCAA;">provideDefinition</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">position</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">token</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> [];</span></span>
<span class="line"><span style="color:#D4D4D4;">},</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 注册定义提供程序</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">disposable</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">registerDefinitionProvider</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;myLanguage&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">provider</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 取消注册</span></span>
<span class="line"><span style="color:#9CDCFE;">disposable</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">dispose</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="registerdocumentformattingeditprovider" tabindex="-1"><a class="header-anchor" href="#registerdocumentformattingeditprovider" aria-hidden="true">#</a> registerDocumentFormattingEditProvider</h2><ul><li>语法: <code>registerDocumentFormattingEditProvider(languageId: string, provider: DocumentFormattingEditProvider): IDisposable</code></li><li>参数: <code>languageId</code> 要注册文档格式化提供程序的语言ID。 <code>provider</code> 文档格式化提供程序对象。</li><li>返回值: <code>IDisposable</code> 一个对象，用于取消注册。 描述: 用于注册文档格式化提供程序。</li></ul><p>示例代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// 引入monaco-editor</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">*</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;monaco-editor&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 定义文档格式化提供程序对象</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">provider</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#DCDCAA;">provideDocumentFormattingEdits</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">options</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">token</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> [];</span></span>
<span class="line"><span style="color:#D4D4D4;">},</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 注册文档格式化提供程序</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">disposable</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">registerDocumentFormattingEditProvider</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;myLanguage&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">provider</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 取消注册</span></span>
<span class="line"><span style="color:#9CDCFE;">disposable</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">dispose</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="registerdocumenthighlightprovider" tabindex="-1"><a class="header-anchor" href="#registerdocumenthighlightprovider" aria-hidden="true">#</a> registerDocumentHighlightProvider</h2><ul><li>语法: <code>registerDocumentHighlightProvider(languageId: string, provider: DocumentHighlightProvider): IDisposable</code></li><li>参数: <code>languageId</code> 要注册文档高亮提供程序的语言ID。 <code>provider</code> 文档高亮提供程序对象。</li><li>返回值: <code>IDisposable</code> 一个对象，用于取消注册。 描述: 用于注册文档高亮提供程序。</li></ul><p>示例代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// 引入monaco-editor</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">*</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;monaco-editor&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 定义文档高亮提供程序对象</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">provider</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#DCDCAA;">provideDocumentHighlights</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">position</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">token</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> [];</span></span>
<span class="line"><span style="color:#D4D4D4;">},</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 注册文档高亮提供程序</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">disposable</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">registerDocumentHighlightProvider</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;myLanguage&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">provider</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 取消注册</span></span>
<span class="line"><span style="color:#9CDCFE;">disposable</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">dispose</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="registerdocumentrangeformattingeditprovider" tabindex="-1"><a class="header-anchor" href="#registerdocumentrangeformattingeditprovider" aria-hidden="true">#</a> registerDocumentRangeFormattingEditProvider</h2><ul><li>语法: <code>registerDocumentRangeFormattingEditProvider(languageId: string, provider: DocumentRangeFormattingEditProvider): IDisposable</code></li><li>参数: <code>languageId</code> 要注册文档范围格式化提供程序的语言ID。 <code>provider</code> 文档范围格式化提供程序对象。</li><li>返回值: <code>IDisposable</code> 一个对象，用于取消注册。 描述: 用于注册文档范围格式化提供程序。</li></ul><p>示例代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// 引入monaco-editor</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">*</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;monaco-editor&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 定义文档范围格式化提供程序对象</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">provider</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">provideDocumentRangeFormattingEdits</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">range</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">options</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">token</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> [];</span></span>
<span class="line"><span style="color:#D4D4D4;">    },</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 注册文档范围格式化提供程序</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">disposable</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">registerDocumentRangeFormattingEditProvider</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;myLanguage&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">provider</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 取消注册</span></span>
<span class="line"><span style="color:#9CDCFE;">disposable</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">dispose</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="registerdocumentrangesemantictokensprovider" tabindex="-1"><a class="header-anchor" href="#registerdocumentrangesemantictokensprovider" aria-hidden="true">#</a> registerDocumentRangeSemanticTokensProvider</h2><ul><li>语法: <code>registerDocumentRangeSemanticTokensProvider(languageId: string, provider: DocumentRangeSemanticTokensProvider): IDisposable</code></li><li>参数: <code>languageId</code> 要注册文档范围语义标记提供程序的语言ID。 <code>provider</code> 文档范围语义标记提供程序对象。</li><li>返回值: <code>IDisposable</code> 一个对象，用于取消注册。 描述: 用于注册文档范围语义标记提供程序。</li></ul><p>示例代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// 引入monaco-editor</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">*</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;monaco-editor&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 定义文档范围语义标记提供程序对象</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">provider</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">provideDocumentRangeSemanticTokens</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">range</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">token</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#9CDCFE;">data:</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">new</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">Uint32Array</span><span style="color:#D4D4D4;">(),</span></span>
<span class="line"><span style="color:#D4D4D4;">        };</span></span>
<span class="line"><span style="color:#D4D4D4;">    },</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 注册文档范围语义标记提供程序</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">disposable</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">registerDocumentRangeSemanticTokensProvider</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;myLanguage&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">provider</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 取消注册</span></span>
<span class="line"><span style="color:#9CDCFE;">disposable</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">dispose</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="registerdocumentsemantictokensprovider" tabindex="-1"><a class="header-anchor" href="#registerdocumentsemantictokensprovider" aria-hidden="true">#</a> registerDocumentSemanticTokensProvider</h2><ul><li>语法: <code>egisterDocumentSemanticTokensProvider(languageId: string, provider: DocumentSemanticTokensProvider): IDisposable</code></li><li>参数:<code>languageId</code>要注册文档语义标记提供程序的语言ID。<code>provider</code>文档语义标记提供程序对象。</li><li>返回值: <code>IDisposable</code>一个对象，用于取消注册。</li></ul><p>描述: 用于注册文档语义标记提供程序。 示例代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// 引入monaco-editor</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">*</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;monaco-editor&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 定义文档语义标记提供程序对象</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">provider</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">provideDocumentSemanticTokens</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">lastResultId</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">token</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">data:</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">new</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">Uint32Array</span><span style="color:#D4D4D4;">(),</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">resultId:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    };</span></span>
<span class="line"><span style="color:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">releaseDocumentSemanticTokens</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">resultId</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {},</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 注册文档语义标记提供程序</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">disposable</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">registerDocumentSemanticTokensProvider</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;myLanguage&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">provider</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 取消注册</span></span>
<span class="line"><span style="color:#9CDCFE;">disposable</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">dispose</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="registerdocumentsymbolprovider" tabindex="-1"><a class="header-anchor" href="#registerdocumentsymbolprovider" aria-hidden="true">#</a> registerDocumentSymbolProvider</h2><ul><li>语法: <code>egisterDocumentSymbolProvider(languageId: string, provider: DocumentSymbolProvider): IDisposable</code></li><li>参数:<code>languageId</code>要注册文档符号提供程序的语言ID。<code>provider</code>文档符号提供程序对象。</li><li>返回值: <code>IDisposable</code>一个对象，用于取消注册。 描述: 用于注册文档符号提供程序。 示例代码：</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// 引入monaco-editor</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">*</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;monaco-editor&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 定义文档符号提供程序对象</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">provider</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">provideDocumentSymbols</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">token</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> [];</span></span>
<span class="line"><span style="color:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 注册文档符号提供程序</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">disposable</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">registerDocumentSymbolProvider</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;myLanguage&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">provider</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 取消注册</span></span>
<span class="line"><span style="color:#9CDCFE;">disposable</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">dispose</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="registerfoldingrangeprovider" tabindex="-1"><a class="header-anchor" href="#registerfoldingrangeprovider" aria-hidden="true">#</a> registerFoldingRangeProvider</h2><ul><li>语法: <code>egisterFoldingRangeProvider(languageId: string, provider: FoldingRangeProvider): IDisposable</code> +参数:<code>languageId</code>要注册折叠范围提供程序的语言ID。<code>provider</code>折叠范围提供程序对象。</li><li>返回值: <code>IDisposable</code>一个对象，用于取消注册。</li></ul><p>描述: 用于注册折叠范围提供程序。 示例代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// 引入monaco-editor</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">*</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;monaco-editor&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 定义折叠范围提供程序对象</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">provider</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">provideFoldingRanges</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">context</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">token</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> [];</span></span>
<span class="line"><span style="color:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 注册折叠范围提供程序</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">disposable</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">registerFoldingRangeProvider</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;myLanguage&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">provider</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 取消注册</span></span>
<span class="line"><span style="color:#9CDCFE;">disposable</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">dispose</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="registerhoverprovider" tabindex="-1"><a class="header-anchor" href="#registerhoverprovider" aria-hidden="true">#</a> registerHoverProvider</h2><ul><li>语法: <code>egisterHoverProvider(languageId: string, provider: HoverProvider): IDisposable</code></li><li>参数:<code>languageId</code>要注册悬停提供程序的语言ID。<code>provider</code>悬停提供程序对象。</li><li>返回值: <code>IDisposable</code>一个对象，用于取消注册。 描述: 用于注册悬停提供程序。 示例代码：</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// 引入monaco-editor</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">*</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;monaco-editor&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 定义悬停提供程序对象</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">provider</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">provideHover</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">position</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">token</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">contents:</span><span style="color:#D4D4D4;"> [],</span></span>
<span class="line"><span style="color:#D4D4D4;">    };</span></span>
<span class="line"><span style="color:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 注册悬停提供程序</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">disposable</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">registerHoverProvider</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;myLanguage&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">provider</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 取消注册</span></span>
<span class="line"><span style="color:#9CDCFE;">disposable</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">dispose</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="registerimplementationprovider" tabindex="-1"><a class="header-anchor" href="#registerimplementationprovider" aria-hidden="true">#</a> registerImplementationProvider</h2><ul><li>语法: <code>egisterImplementationProvider(languageId: string, provider: ImplementationProvider): IDisposable</code></li><li>参数: <code>languageId</code>要注册实现提供程序的语言ID。<code>provider</code>实现提供程序对象。</li><li>返回值: IDisposable一个对象，用于取消注册。</li></ul><p>描述: 用于注册实现提供程序。 示例代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// 引入monaco-editor</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">*</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;monaco-editor&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 定义实现供程序对象</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">provider</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#DCDCAA;">provideImplementation</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">position</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">token</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> [];</span></span>
<span class="line"><span style="color:#D4D4D4;">},</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 注册实现提供程序</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">disposable</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">registerImplementationProvider</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;myLanguage&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">provider</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 取消注册</span></span>
<span class="line"><span style="color:#9CDCFE;">disposable</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">dispose</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="registerreferenceprovider" tabindex="-1"><a class="header-anchor" href="#registerreferenceprovider" aria-hidden="true">#</a> registerReferenceProvider</h2><ul><li>语法: <code>registerReferenceProvider(languageId: string, provider: ReferenceProvider): IDisposable</code></li><li>参数: <code>languageId</code> 要注册引用提供程序的语言ID。 <code>provider</code> 引用提供程序对象。</li><li>返回值: <code>IDisposable</code> 一个对象，用于取消注册。 描述: 用于注册引用提供程序。</li></ul><p>示例代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// 引入monaco-editor</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">*</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;monaco-editor&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 定义引用提供程序对象</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">provider</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#DCDCAA;">provideReferences</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">position</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">context</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">token</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> [];</span></span>
<span class="line"><span style="color:#D4D4D4;">},</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 注册引用提供程序</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">disposable</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">registerReferenceProvider</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;myLanguage&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">provider</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 取消注册</span></span>
<span class="line"><span style="color:#9CDCFE;">disposable</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">dispose</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="registerrenameprovider" tabindex="-1"><a class="header-anchor" href="#registerrenameprovider" aria-hidden="true">#</a> registerRenameProvider</h2><ul><li>语法: <code>registerRenameProvider(languageId: string, provider: RenameProvider): IDisposable</code></li><li>参数: <code>languageId</code> 要注册重命名提供程序的语言ID。 <code>provider</code> 重命名提供程序对象。</li><li>返回值: <code>IDisposable</code> 一个对象，用于取消注册。</li><li>描述: 用于注册重命名提供程序。</li></ul><p>示例代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// 引入monaco-editor</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">*</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;monaco-editor&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 定义重命名提供程序对象</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">provider</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">provideRenameEdits</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">position</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">newName</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">token</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#9CDCFE;">edits:</span><span style="color:#D4D4D4;"> [],</span></span>
<span class="line"><span style="color:#D4D4D4;">        };</span></span>
<span class="line"><span style="color:#D4D4D4;">    },</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 注册重命名提供程序</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">disposable</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">registerRenameProvider</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;myLanguage&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">provider</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 取消注册</span></span>
<span class="line"><span style="color:#9CDCFE;">disposable</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">dispose</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="registersignaturehelpprovider" tabindex="-1"><a class="header-anchor" href="#registersignaturehelpprovider" aria-hidden="true">#</a> registerSignatureHelpProvider</h2><ul><li>语法: <code>registerSignatureHelpProvider(languageId: string, provider: SignatureHelpProvider): IDisposable</code></li><li>参数: <code>languageId</code> 要注册签名帮助提供程序的语言ID。 <code>provider</code> 签名帮助提供程序对象。</li><li>返回值: <code>IDisposable</code> 一个对象，用于取消注册。</li><li>描述: 用于注册签名帮助提供程序。</li></ul><p>示例代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// 引入monaco-editor</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">*</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;monaco-editor&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 定义签名帮助提供程序对象</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">provider</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">provideSignatureHelp</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">position</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">token</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">context</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#9CDCFE;">signatures:</span><span style="color:#D4D4D4;"> [],</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#9CDCFE;">activeSignature:</span><span style="color:#D4D4D4;"> </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#9CDCFE;">activeParameter:</span><span style="color:#D4D4D4;"> </span><span style="color:#B5CEA8;">0</span></span>
<span class="line"><span style="color:#D4D4D4;">        };</span></span>
<span class="line"><span style="color:#D4D4D4;">    },</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 注册签名帮助提供程序</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">disposable</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">registerSignatureHelpProvider</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;myLanguage&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">provider</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 取消注册</span></span>
<span class="line"><span style="color:#9CDCFE;">disposable</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">dispose</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="registertypedefinitionprovider" tabindex="-1"><a class="header-anchor" href="#registertypedefinitionprovider" aria-hidden="true">#</a> registerTypeDefinitionProvider</h2><ul><li>语法: <code>registerTypeDefinitionProvider(languageId: string, provider: TypeDefinitionProvider): IDisposable</code></li><li>参数: <code>languageId</code> 要注册类型定义提供程序的语言ID。 <code>provider</code> 类型定义提供程序对象。</li><li>返回值: <code>IDisposable</code> 一个对象，用于取消注册。</li><li>描述: 用于注册类型定义提供程序。</li></ul><p>示例代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// 引入monaco-editor</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">*</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;monaco-editor&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 定义类型定义提供程序对象</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">provider</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">provideTypeDefinition</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">position</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">token</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> [];</span></span>
<span class="line"><span style="color:#D4D4D4;">    },</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 注册类型定义提供程序</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">disposable</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">registerTypeDefinitionProvider</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;myLanguage&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">provider</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 取消注册</span></span>
<span class="line"><span style="color:#9CDCFE;">disposable</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">dispose</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="registertokensproviderfactory" tabindex="-1"><a class="header-anchor" href="#registertokensproviderfactory" aria-hidden="true">#</a> registerTokensProviderFactory</h2><p>Monaco Editor中的一个方法，用于注册一个标记提供程序工厂。标记提供程序负责为编辑器中的文本提供语法高亮和其他标记信息。以下是使用 registerTokensProviderFactory 方法的示例代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">registerTokensProviderFactory</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;javascript&#39;</span><span style="color:#D4D4D4;">, {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">getInitialState</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">new</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">MyState</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">tokenize</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">line</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">state</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">offsetDelta</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">stopAtOffset</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">MyTokenizer</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">tokenize</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">line</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">state</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">offsetDelta</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">stopAtOffset</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">MyState</span><span style="color:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">line</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">tokens</span><span style="color:#D4D4D4;"> = [];</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">MyTokenizer</span><span style="color:#D4D4D4;">() {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">MyTokenizer</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">tokenize</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">line</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">state</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">offsetDelta</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">stopAtOffset</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">var</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">tokens</span><span style="color:#D4D4D4;"> = [];</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// tokenization logic goes here</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">tokens:</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">tokens</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">endState:</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">state</span></span>
<span class="line"><span style="color:#D4D4D4;">  };</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这个示例中，使用 monaco.languages.registerTokensProviderFactory 方法注册了一个名为 javascript 的语言的标记提供程序工厂。该工厂包含两个方法： getInitialState 和 tokenize 。 getInitialState 方法返回一个新的状态对象，该对象将在每次调用 tokenize 方法时传递给它。 tokenize 方法接收一行文本、当前状态、偏移量增量和停止偏移量等参数，并返回一个包含标记和新状态的对象。在这个示例中，我们使用 MyTokenizer 类作为标记化逻辑的实现，并使用 MyState 类作为状态对象的实现。 MyTokenizer.tokenize 方法实现了标记化逻辑，将标记添加到 tokens 数组中，并返回一个包含标记和状态对象的对象。</p><h2 id="registertypedefinitionprovider-1" tabindex="-1"><a class="header-anchor" href="#registertypedefinitionprovider-1" aria-hidden="true">#</a> registerTypeDefinitionProvider</h2><ul><li>用法：<code>registerTypeDefinitionProvider(languageSelector: LanguageSelector, provider: TypeDefinitionProvider): IDisposable</code></li><li>参数： <ul><li><code>languageSelector</code>: <code>languageSelector</code></li><li><code>provider</code>: <code>TypeDefinitionProvider</code></li></ul></li><li>返回值： <code>IDisposable</code></li></ul><p>允许您为特定语言注册类型定义提供程序。类型定义提供程序允许您为特定类型定义提供跳转和浏览功能。该方法接受两个参数，第一个参数是语言标识符，第二个参数是类型定义提供程序对象。 以下是 registerTypeDefinitionProvider 的一个示例用法：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">registerTypeDefinitionProvider</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;javascript&#39;</span><span style="color:#D4D4D4;">, {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">provideTypeDefinition</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">position</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">token</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#6A9955;">// your implementation goes here</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在此示例中，我们使用 registerTypeDefinitionProvider 方法为 javascript 语言注册了一个类型定义提供程序。我们传递了一个包含 provideTypeDefinition 方法的对象作为第二个参数。 provideTypeDefinition 方法接受三个参数： model ， position 和 token 。 model 参数是一个 ITextModel 对象，表示当前编辑器文本模型。 position 参数是一个 Position 对象，表示要查找类型定义的位置。 token 参数是一个取消令牌，用于取消操作（可选）。 在 provideTypeDefinition 方法中，您可以实现自己的逻辑来查找并返回类型定义。例如，您可以使用 monaco.languages.getTypeDefinitions 方法来查找类型定义。该方法接受三个参数： model ， position 和 token 。 model 和 position 参数与 provideTypeDefinition 方法中的相同。 token 参数是一个取消令牌，用于取消操作（可选）。 getTypeDefinitions 方法返回一个 Promise ，该 Promise 解析为一个类型定义数组。每个类型定义都是一个 Location 对象，表示类型定义的位置。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">registerTypeDefinitionProvider</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;javascript&#39;</span><span style="color:#D4D4D4;">, {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">provideTypeDefinition</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">position</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">token</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getTypeDefinitions</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;javascript&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">uri</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">position</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">token</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在此示例中，我们使用 monaco.languages.getTypeDefinitions 方法在 javascript 语言中查找类型定义。我们使用相同的 model 和 position 参数，并将 token 参数传递给 getTypeDefinitions 方法。然后，我们返回 getTypeDefinitions 方法返回的 Promise 。</p><h2 id="setcolormap" tabindex="-1"><a class="header-anchor" href="#setcolormap" aria-hidden="true">#</a> setColorMap</h2><ul><li>用法：<code>setColorMap(colorMap: string[]): void</code></li><li>参数： <ul><li><code>colorMap</code>: string[]</li></ul></li><li>返回值： <code>-</code></li></ul><p>设置自定义颜色映射。该方法接受一个参数，该参数是一个包含颜色映射的对象。 以下是 setColorMap 的一个示例用法：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">editor</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">setColorMap</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#CE9178;">&#39;editor.background&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;#282c34&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#CE9178;">&#39;editor.foreground&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;#abb2bf&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#CE9178;">&#39;editor.lineHighlightBackground&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;#3e4451&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#CE9178;">&#39;editorLineNumber.foreground&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;#636d83&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#CE9178;">&#39;editor.selectionBackground&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;#4d5b70&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#CE9178;">&#39;editorCursor.foreground&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;#528bff&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#CE9178;">&#39;editorWhitespace.foreground&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;#abb2bf&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">});</span></span>
<span class="line"><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">editor</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">create</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">document</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getElementById</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;container&#39;</span><span style="color:#D4D4D4;">), {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">value:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;function foo() { console.log(&quot;Hello, world!&quot;); }&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">language:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;javascript&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在此示例中，我们使用 setColorMap 方法为编辑器设置了自定义颜色映射。我们传递了一个包含颜色映射的对象，该对象具有多个属性，每个属性都是一个编辑器颜色的名称和对应的颜色值。在此示例中，我们设置了编辑器的背景、前景、行高亮背景、行号前景、选择背景、光标前景和空白字符前景颜色。</p><h2 id="setlanguageconfiguration" tabindex="-1"><a class="header-anchor" href="#setlanguageconfiguration" aria-hidden="true">#</a> setLanguageConfiguration</h2><ul><li>用法：<code>setLanguageConfiguration(languageId: string, configuration: LanguageConfiguration): IDisposable</code></li><li>参数： <ul><li><code>languageId</code> string</li><li><code>configuration</code>: <code>LanguageConfiguration</code></li></ul></li><li>返回值： <code>IDisposable</code></li></ul><p>为特定语言设置自定义配置。该方法接受两个参数，第一个参数是语言标识符，第二个参数是包含配置选项的对象。 以下是 setLanguageConfiguration 的一个示例用法：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">register</span><span style="color:#D4D4D4;">({ </span><span style="color:#9CDCFE;">id:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;mySpecialLanguage&#39;</span><span style="color:#D4D4D4;"> });</span></span>
<span class="line"><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">setLanguageConfiguration</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;mySpecialLanguage&#39;</span><span style="color:#D4D4D4;">, {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">comments:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">lineComment:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;//&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">blockComment:</span><span style="color:#D4D4D4;"> [</span><span style="color:#CE9178;">&#39;/*&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;*/&#39;</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">brackets:</span><span style="color:#D4D4D4;"> [[</span><span style="color:#CE9178;">&#39;{&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;}&#39;</span><span style="color:#D4D4D4;">], [</span><span style="color:#CE9178;">&#39;[&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;]&#39;</span><span style="color:#D4D4D4;">], [</span><span style="color:#CE9178;">&#39;(&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;)&#39;</span><span style="color:#D4D4D4;">]],</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">autoClosingPairs:</span><span style="color:#D4D4D4;"> [</span></span>
<span class="line"><span style="color:#D4D4D4;">    { </span><span style="color:#9CDCFE;">open:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;{&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">close:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;}&#39;</span><span style="color:#D4D4D4;"> },</span></span>
<span class="line"><span style="color:#D4D4D4;">    { </span><span style="color:#9CDCFE;">open:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;[&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">close:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;]&#39;</span><span style="color:#D4D4D4;"> },</span></span>
<span class="line"><span style="color:#D4D4D4;">    { </span><span style="color:#9CDCFE;">open:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;(&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">close:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;)&#39;</span><span style="color:#D4D4D4;"> }</span></span>
<span class="line"><span style="color:#D4D4D4;">  ],</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">surroundingPairs:</span><span style="color:#D4D4D4;"> [</span></span>
<span class="line"><span style="color:#D4D4D4;">    { </span><span style="color:#9CDCFE;">open:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;{&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">close:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;}&#39;</span><span style="color:#D4D4D4;"> },</span></span>
<span class="line"><span style="color:#D4D4D4;">    { </span><span style="color:#9CDCFE;">open:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;[&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">close:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;]&#39;</span><span style="color:#D4D4D4;"> },</span></span>
<span class="line"><span style="color:#D4D4D4;">    { </span><span style="color:#9CDCFE;">open:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;(&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">close:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;)&#39;</span><span style="color:#D4D4D4;"> }</span></span>
<span class="line"><span style="color:#D4D4D4;">  ]</span></span>
<span class="line"><span style="color:#D4D4D4;">});</span></span>
<span class="line"><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">editor</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">create</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">document</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getElementById</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;container&#39;</span><span style="color:#D4D4D4;">), {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">value:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;function foo() { console.log(&quot;Hello, world!&quot;); }&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">language:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;mySpecialLanguage&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在此示例中，我们首先使用 register 方法注册了一个名为 mySpecialLanguage 的新语言。然后，我们使用 setLanguageConfiguration 方法为其设置了自定义配置。我们将 mySpecialLanguage 作为第一个参数传递给 setLanguageConfiguration 方法，以指定我们要为其设置自定义配置。然后，我们传递了一个包含配置选项的对象，该对象具有 comments 、 brackets 、 autoClosingPairs 和 surroundingPairs 属性，每个属性都包含一个或多个配置选项。在此示例中，我们为该语言设置了单行和多行注释、括号、自动闭合对和周围的对。</p><h2 id="setmonarchtokensprovider" tabindex="-1"><a class="header-anchor" href="#setmonarchtokensprovider" aria-hidden="true">#</a> setMonarchTokensProvider</h2><ul><li>用法：<code>setMonarchTokensProvider(languageId: string, languageDef: IMonarchLanguage | Thenable&lt;IMonarchLanguage&gt;): IDisposable</code></li><li>参数： <ul><li><code>languageId</code> string</li><li><code>languageDef</code>: <code>IMonarchLanguage | Thenable&lt;IMonarchLanguage&gt;</code></li></ul></li><li>返回值： <code>IDisposable</code> 为编辑器设置自定义语法高亮规则。该方法接受两个参数，第一个参数是语言标识符，第二个参数是包含语法规则的对象。 以下是 setMonarchTokensProvider 的一个示例用法：</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">register</span><span style="color:#D4D4D4;">({ </span><span style="color:#9CDCFE;">id:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;mySpecialLanguage&#39;</span><span style="color:#D4D4D4;"> });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">setMonarchTokensProvider</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;mySpecialLanguage&#39;</span><span style="color:#D4D4D4;">, {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">tokenizer:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">root:</span><span style="color:#D4D4D4;"> [</span></span>
<span class="line"><span style="color:#D4D4D4;">      [</span><span style="color:#D16969;">/</span><span style="color:#DCDCAA;">\\b</span><span style="color:#D16969;">if</span><span style="color:#DCDCAA;">\\b</span><span style="color:#D16969;">/</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;keyword&#39;</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">      [</span><span style="color:#D16969;">/</span><span style="color:#DCDCAA;">\\b</span><span style="color:#D16969;">\\d</span><span style="color:#D7BA7D;">+</span><span style="color:#DCDCAA;">\\b</span><span style="color:#D16969;">/</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;number&#39;</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">      [</span><span style="color:#D16969;">/</span><span style="color:#DCDCAA;">\\b</span><span style="color:#CE9178;">(</span><span style="color:#D16969;">a</span><span style="color:#DCDCAA;">|</span><span style="color:#D16969;">an</span><span style="color:#DCDCAA;">|</span><span style="color:#D16969;">the</span><span style="color:#CE9178;">)</span><span style="color:#DCDCAA;">\\b</span><span style="color:#D16969;">/</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;article&#39;</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">      [</span><span style="color:#D16969;">/</span><span style="color:#CE9178;">[</span><span style="color:#D16969;">a-z</span><span style="color:#CE9178;">][</span><span style="color:#D16969;">a-z0-9</span><span style="color:#CE9178;">]</span><span style="color:#D7BA7D;">*</span><span style="color:#D16969;">/</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;identifier&#39;</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">      [</span><span style="color:#D16969;">/</span><span style="color:#CE9178;">[</span><span style="color:#D16969;">A-Z</span><span style="color:#CE9178;">][</span><span style="color:#D16969;">a-z0-9</span><span style="color:#CE9178;">]</span><span style="color:#D7BA7D;">*</span><span style="color:#D16969;">/</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;type.identifier&#39;</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">      [</span><span style="color:#D16969;">/&quot;/</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;string&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;@string&#39;</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#D4D4D4;">    ],</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">string:</span><span style="color:#D4D4D4;"> [</span></span>
<span class="line"><span style="color:#D4D4D4;">      [</span><span style="color:#D16969;">/</span><span style="color:#CE9178;">[^</span><span style="color:#D7BA7D;">\\\\</span><span style="color:#D16969;">&quot;</span><span style="color:#CE9178;">]</span><span style="color:#D7BA7D;">+</span><span style="color:#D16969;">/</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;string&#39;</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">      [</span><span style="color:#D16969;">/</span><span style="color:#D7BA7D;">\\\\</span><span style="color:#D16969;">./</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;string.escape&#39;</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">      [</span><span style="color:#D16969;">/&quot;/</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;string&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;@pop&#39;</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#D4D4D4;">    ]</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">editor</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">create</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">document</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getElementById</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;container&#39;</span><span style="color:#D4D4D4;">), {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">value:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;if (x &gt; 0) { console.log(&quot;Hello, world!&quot;); }&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">language:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;mySpecialLanguage&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在此示例中，我们首先使用 register 方法注册了一个名为 mySpecialLanguage 的新语言。然后，我们使用 setMonarchTokensProvider 方法为其设置了自定义语法高亮规则。我们将 mySpecialLanguage 作为第一个参数传递给 setMonarchTokensProvider 方法，以指定我们要为其设置语法高亮规则。然后，我们传递了一个包含语法规则的对象，该对象具有一个名为 tokenizer 的属性，该属性包含一个名为 root 的数组，该数组包含一组正则表达式和对应的标记类型。我们还定义了一个名为 string 的标记类型，用于高亮字符串文字。最后，我们创建了一个使用新语言的编辑器，并将一些示例代码设置为其值。 您可以根据需要自定义语法高亮规则的实现。</p><h2 id="settokensprovider" tabindex="-1"><a class="header-anchor" href="#settokensprovider" aria-hidden="true">#</a> setTokensProvider</h2><ul><li>用法：<code>setTokensProvider(languageId: string, provider: TokensProvider | EncodedTokensProvider | Thenable&lt;TokensProvider | EncodedTokensProvider&gt;): IDisposable</code></li><li>参数： <ul><li><code>languageId</code> string</li><li><code>provider</code>: <code> TokensProvider | EncodedTokensProvider | Thenable&lt;TokensProvider | EncodedTokensProvider&gt;</code></li></ul></li><li>返回值： <code>IDisposable</code></li></ul><p>允许您为编辑器设置自定义标记提供程序。该方法接受一个参数，该参数是实现 monaco.languages.TokensProvider 接口的对象。 以下是 setTokensProvider 的一个示例用法：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">editor</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">create</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">document</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getElementById</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;container&#39;</span><span style="color:#D4D4D4;">), {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">value:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;function foo() { console.log(&quot;Hello, world!&quot;); }&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">language:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;javascript&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">setTokensProvider</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;javascript&#39;</span><span style="color:#D4D4D4;">, {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">getInitialState</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;">() { ... },</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">tokenize</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">line</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">state</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">offsetDelta</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">stopAtOffset</span><span style="color:#D4D4D4;">) { ... }</span></span>
<span class="line"><span style="color:#D4D4D4;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在此示例中，我们首先创建了一个JavaScript编辑器，然后使用 setTokensProvider 方法为其设置了自定义标记提供程序。我们将JavaScript作为参数传递给 setTokensProvider 方法，以指定我们要为其设置标记提供程序。然后，我们传递了一个对象，该对象实现了 monaco.languages.TokensProvider 接口，并具有 getInitialState 和 tokenize 方法。 getInitialState 方法返回初始状态，而 tokenize 方法接受一行代码和状态作为输入，并返回一个标记数组。</p><p>您可以根据需要自定义标记提供程序的实现。</p>`,125),p=[o];function r(c,D){return n(),a("div",null,p)}const d=s(e,[["render",r],["__file","language.html.vue"]]);export{d as default};
